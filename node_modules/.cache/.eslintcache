[{"/Users/morgan/Documents/Void/Void/src/index.js":"1","/Users/morgan/Documents/Void/Void/src/reportWebVitals.js":"2","/Users/morgan/Documents/Void/Void/src/App.js":"3","/Users/morgan/Documents/Void/Void/src/components/void/void.js":"4"},{"size":1067,"mtime":1639443149467,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1638915652459,"results":"7","hashOfConfig":"6"},{"size":818,"mtime":1640191142707,"results":"8","hashOfConfig":"6"},{"size":2571,"mtime":1640193075941,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"bn3p0k",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/morgan/Documents/Void/Void/src/index.js",[],["20","21"],"/Users/morgan/Documents/Void/Void/src/reportWebVitals.js",[],"/Users/morgan/Documents/Void/Void/src/App.js",[],"/Users/morgan/Documents/Void/Void/src/components/void/void.js",["22"],"import React, { useEffect, useRef, useState } from \"react\";\nimport  \"./void.css\"\nimport  \"./stars-two.css\"\nimport HeroImage from '../../assets/img/planet-3.png';\n\n\nfunction Void(){\n    const [timerDays, setTimerDays] = useState('00');\n    const [timerHours, setTimerHours] = useState('00');\n    const [timerMinutes, setTimerMinutes] = useState('00');\n    const [timerSeconds, setTimerSeconds] = useState('00');\n\n    let interval = useRef();\n\n    const startTimer = () => {\n        const countdownDate = new Date('February 01 2022 00:00:00').getTime();\n\n        interval = setInterval(() => {\n            const now = new Date().getTime();\n            const distance = countdownDate - now;\n\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            if (distance < 0) {\n                //stop our time\n                clearInterval(interval.current);\n            } else {\n                //update our times\n                setTimerDays(days);\n                setTimerHours(hours);\n                setTimerMinutes(minutes);\n                setTimerSeconds(seconds);\n            }\n\n        }, 1000)\n    };\n\n    // componentDidMount\n    useEffect(() => {\n        startTimer();\n        return () => {\n            clearInterval(interval.current);\n        }\n    });\n\n    return (\n        <div id=\"void\">\n\n                <div id='stars'></div>\n                <div id='stars2'></div>\n                <div id='stars3'></div>\n\n            <div className=\"message\">\n            <img src={HeroImage} alt=\"metamask logo\"></img>\n            <h2>Coming soon</h2>\n            <div className=\"timer\">\n                <div className=\"days space\">\n                    <p>{timerDays}</p>\n                    <p><small>Days</small></p>\n                </div>\n                <div className=\"hours space\">\n                    <p>{timerHours}</p>\n                    <p><small>Hours</small></p>\n                </div>\n                <div className=\"mins space\">\n                    <p>{timerMinutes}</p>\n                    <p><small>Mins</small></p>\n                </div>\n                <div className=\"secs space\">\n                    <p>{timerSeconds}</p>\n                    <p><small>Secs</small></p>\n                </div>\n            </div>\n            </div>\n        </div>\n      );\n}\n\nexport default Void;\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":45,"column":36,"nodeType":"29","endLine":45,"endColumn":43},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react-hooks/exhaustive-deps","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","no-global-assign","no-unsafe-negation"]